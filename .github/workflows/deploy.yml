name: Deploy

on:
  push:
    branches:
      - development
      - staging
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            echo "DEPLOY_PATH=${{ secrets.DEV_PATH }}" >> $GITHUB_ENV
            echo "BRANCH_NAME=development" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "DEPLOY_PATH=${{ secrets.STG_PATH }}" >> $GITHUB_ENV
            echo "BRANCH_NAME=staging" >> $GITHUB_ENV
          else
            echo "DEPLOY_PATH=${{ secrets.PROD_PATH }}" >> $GITHUB_ENV
            echo "BRANCH_NAME=production" >> $GITHUB_ENV
          fi

      - name: Set up SSH and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: DEPLOY_PATH,BRANCH_NAME
          script: |
            echo "DEPLOY_PATH is set to $DEPLOY_PATH"
            echo "BRANCH_NAME is set to $BRANCH_NAME"

            # Ensure correct PHP version is used
            export PATH=/opt/alt/php83/usr/bin:$PATH
            PHP_BIN=$(which php)
            COMPOSER_BIN=$(which composer)

            # Make sure directory exists
            mkdir -p $DEPLOY_PATH
            cd $DEPLOY_PATH

            if [ ! -d ".git" ]; then
              echo "⚡ No git repo found. Cloning fresh..."
              git clone -b $BRANCH_NAME git@github.com:Asem-mohsen/Gym.git .
            else
              echo "⚡ Git repo exists. Updating..."
              git fetch origin $BRANCH_NAME
              git reset --hard origin/$BRANCH_NAME
              git clean -df
            fi

            # Install/update composer dependencies
            $COMPOSER_BIN install --no-dev --optimize-autoloader
            $COMPOSER_BIN dump-autoload

            # Run database migrations
            $PHP_BIN artisan migrate --force

            # Clear caches
            $PHP_BIN artisan config:clear
            $PHP_BIN artisan cache:clear
            $PHP_BIN artisan view:clear
            $PHP_BIN artisan route:clear

            echo "Deployment completed successfully!"